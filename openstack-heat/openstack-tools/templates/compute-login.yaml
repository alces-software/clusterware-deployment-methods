heat_template_version: 2013-05-23

description: >
  Add multiple compute nodes to your existing infrastructure stack

parameters:
  cluster_name:
    type: string
    label: Cluster name
    description: Enter the cluster name

  compute_flavour:
    type: string
    label: Compute node flavour
    description: Enter the compute node flavour to use
    constraints:
    - custom_constraint: nova.flavor

  image:
    type: string
    label: Compute image
    description: Select the Alces Compute image to use
    constraints:
    - custom_constraint: glance.image

  cluster_network_id:
    type: string
    label: Cluster network ID
    description: Enter the unique cluster network ID
    constraints:
      - custom_constraint: neutron.network

  cluster_subnet_id:
    type: string
    label: Cluster subnet ID
    description: Enter the unique cluster subnet ID
    constraints:
      - custom_constraint: neutron.subnet

  environment_type:
    type: string
    label: Environment type
    description: Select the environment type to deploy
    constraints:
    - allowed_values: [ "galaxy", "scheduler" ]

  admin_key:
    type: string
    label: Admin keypair
    description: Select your keypair to use
    constraints:
      - custom_constraint: nova.keypair

resources:
  cluster_uuid:
    type: OS::Heat::RandomString
    properties:
      length: 24
      sequence: digits

  cluster_token:
    type: OS::Heat::RandomString
    properties:
      length: 20
      sequence: lettersdigits

  master_config:
    type: OS::Heat::CloudConfig
    properties:
      cloud_config:
            write_files:
            - path: /opt/clusterware/etc/config.yml
              permissions: '0640'
              owner: root:root
              content:
                str_replace:
                  template: |
                    cluster:
                      uuid: '%UUID%'
                      token: '%TOKEN%'
                      name: '%CLUSTER_NAME%'
                      role: 'master'
                      tags:
                        %ENVIRONMENT%_roles: ':master:'
                        storage_roles: ':master:'
                  params:
                    "%CLUSTER_NAME%": { get_param: cluster_name }
                    "%UUID%": { get_resource: cluster_uuid }
                    "%TOKEN%": { get_resource: cluster_token }
                    "%ENVIRONMENT%": { get_param: environment_type }

  login1:
    type: OS::Nova::Server
    properties:
      name: login1
      image: { get_param: image }
      flavor: { get_param: compute_flavour }
      key_name: { get_param: admin_key }
      networks:
        - port: { get_resource: login1_port }
      user_data_format: RAW
      user_data: { get_resource: master_config }

  login1_port:
    type: OS::Neutron::Port
    depends_on: cluster_subnet
    properties:
      network_id: { get_param: cluster_network_id }
      fixed_ips:
        - subnet_id: { get_param: cluster_subnet_id }

  login1_access:
    type: OS::Neutron::FloatingIP
    depends_on: router
    properties:
      floating_network: public
      port_id: { get_resource: login1_port }

outputs:
  login1_public_ip:
    description: Access IP of cluster login node
    value: { get_attr: [ login1_access, floating_ip_address ] }

  cluster_uuid:
    description: Cluster unique ID
    value: { get_resource: cluster_uuid }

  cluster_token:
    description: Cluster unique token
    value: { get_resource: cluster_token }

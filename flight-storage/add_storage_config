#!/bin/bash

DOMAIN=`hostname -d`
REALM=`echo $DOMAIN | sed -e 's/\(.*\)/\U\1/'`

read_config() {

  storage_config="/opt/flight-storage/etc/config"
  if [ ! -f "$storage_config" ]; then
    echo "No storage configurations detected"
    exit 1
  elif [ -f "$storage_config" ]; then
    storage_setup
  fi

}

storage_setup() {

  sed -i -e '/.*RPCNFSDCOUNT.*/c RPCNFSDCOUNT=64' \
            /etc/sysconfig/nfs && systemctl restart nfs
  while IFS= read -r config; do
      export_path=`echo $config | awk '{print $1}'`
      export_range=`echo $config | awk '{print $2}'`
      export_type=`echo $config | awk '{print $3}'`
      volume_mount=`echo $config | awk '{print $4}'`
      if [[ -z "$export_path" ]] || [[ -z "$export_range" ]] || [[ -z "$export_type" ]]; then
          continue
      else
          if [ ! "$(grep "${export_path}" /etc/exports)" ]; then
              mkdir -p ${export_path} \
                    && chmod 777 ${export_path}
              echo "${export_path} ${export_range}(rw,no_root_squash,no_subtree_check,sync)" \
                  >> /etc/exports
              echo "Adding export for ${export_path}"
              if [ "$export_type" == "instance" ]; then
                  exportfs -a
                  continue
              elif [ "$export_type" == "volume" ]; then
                if [ ! "$(fdisk -l | grep "${volume_mount}")" ]; then
                  echo "${export_path} volume does not exist as ${volume_mount}"
                  continue
                else
                  mkfs.xfs ${volume_mount}
                  if [ "$(echo $?)" -eq 0 ]; then
                    echo "${volume_mount} ${export_path} xfs defaults,nofail 0 0" \
                         >> /etc/fstab && mount -a && exportfs -a
                  elif [ "$(echo $?)" -eq 1 ]; then
                    echo "Unable to format disk for ${export_path} - skipping"
                    continue
                  fi
              fi
          elif [ "$(grep "${export_path}" /etc/exports)" ]; then
              echo "Configuration for ${export_path} exists - skipping"
              continue
          fi
      fi
    fi
  done < "$storage_config"

}

push_config() {

  _s3cmd=/opt/clusterware/opt/s3cmd/s3cmd
  source /opt/clusterware/etc/cluster-customizer.rc
  echo "STORAGE_PRV=`hostname -i`" >> /opt/flight-storage/etc/storage_config
  chmod 0640 /opt/flight-storage/etc/storage_config
  if [ -z $cw_CLUSTER_CUSTOMIZER_access_key_id ]; then
    while [ ! -f /opt/clusterware/etc/config/cluster/instance-aws-iam.rc ]; do
        sleep 1
    done
    source /opt/clusterware/etc/config/cluster/instance-aws.rc
    source /opt/clusterware/etc/config/cluster/instance-aws-iam.rc
    cw_CLUSTER_CUSTOMIZER_bucket="s3://alces-flight-${cw_INSTANCE_aws_account_hash}"
    cw_CLUSTER_CUSTOMIZER_region=$(curl -sL http://169.254.169.254/latest/meta-data/placement/availability-zone/ | sed 's/.$//')
    $_s3cmd --access_key="${cw_INSTANCE_aws_iam_role_access_key_id}" \
            --secret_key="${cw_INSTANCE_aws_iam_role_secret_access_key}" \
            --access_token="${cw_INSTANCE_aws_iam_role_security_token}" \
            --region ${cw_CLUSTER_CUSTOMIZER_region} \
            put /opt/flight-storage/etc/storage_config \
            ${cw_CLUSTER_CUSTOMIZER_bucket}/directory/${REALM}/storage_config
  else
    $_s3cmd --access_key=${cw_CLUSTER_CUSTOMIZER_access_key_id} \
            --secret_key=${cw_CLUSTER_CUSTOMIZER_secret_access_key} \
            --region=${cw_CLUSTER_CUSTOMIZER_region} \
            put /opt/flight-storage/etc/storage_config \
            ${cw_CLUSTER_CUSTOMIZER_bucket}/directory/${REALM}/storage_config
  fi

}

read_config
push_config
